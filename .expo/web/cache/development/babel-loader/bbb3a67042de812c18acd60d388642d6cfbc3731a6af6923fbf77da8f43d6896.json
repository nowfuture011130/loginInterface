{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _customInput = _interopRequireDefault(require(\"../../components/customInput\"));\nvar _customButton = _interopRequireDefault(require(\"../../components/customButton\"));\nvar _native = require(\"@react-navigation/native\");\nvar _reactHookForm = require(\"react-hook-form\");\nvar _awsAmplify = require(\"aws-amplify\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"/Users/haoranwu/Desktop/login/loginProject/src/screens/NewPasswordScreen/NewPasswordScreen.tsx\";\nfunction NewPasswordScreen(_ref) {\n  var route = _ref.route;\n  var navigation = (0, _native.useNavigation)();\n  var _useForm = (0, _reactHookForm.useForm)({\n      defaultValues: {\n        username: route.params\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var SubmitPress = function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (data) {\n      try {\n        yield _awsAmplify.Auth.forgotPasswordSubmit(data.username, data.code, data.password);\n        navigation.navigate('SignIn');\n      } catch (e) {\n        _reactNative.Alert.alert(e.message);\n      }\n    });\n    return function SubmitPress(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var BackToSignInPress = function BackToSignInPress() {\n    console.log('BackToSignInPress');\n    navigation.navigate('SignIn');\n  };\n  return (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: styles.root,\n      children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: styles.LayCenter,\n        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: styles.title,\n          children: \"Reset your password\"\n        })\n      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: styles.text,\n        children: \"Code\"\n      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: styles.LayCenter,\n        children: [(0, _jsxRuntime.jsx)(_customInput.default, {\n          name: \"username\",\n          control: control,\n          placeholder: \"Enter your username\",\n          rules: {\n            required: 'Username is required'\n          }\n        }), (0, _jsxRuntime.jsx)(_customInput.default, {\n          name: \"code\",\n          control: control,\n          placeholder: \"Enter your confirmation code\",\n          rules: {}\n        })]\n      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: styles.text,\n        children: \"New Password\"\n      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: styles.LayCenter,\n        children: [(0, _jsxRuntime.jsx)(_customInput.default, {\n          name: \"password\",\n          control: control,\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          rules: {\n            required: 'Password is required',\n            minLength: {\n              value: 7,\n              message: 'Password should be at least 7 characters long'\n            }\n          }\n        }), (0, _jsxRuntime.jsx)(_customButton.default, {\n          onPress: handleSubmit(SubmitPress),\n          text: \"Submit\",\n          type: \"Blue\",\n          bgColor: \"\",\n          fgColor: \"\"\n        }), (0, _jsxRuntime.jsx)(_customButton.default, {\n          onPress: BackToSignInPress,\n          text: \"Back to Sign in\",\n          type: \"Gray\",\n          bgColor: \"\",\n          fgColor: \"\"\n        })]\n      })]\n    })\n  });\n}\nvar styles = _reactNative.StyleSheet.create({\n  root: {\n    padding: 40\n  },\n  LayCenter: {\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#051c60',\n    margin: 30\n  },\n  text: {\n    color: 'black',\n    alignItems: 'flex-start',\n    direction: 'rtl',\n    fontSize: 18\n  },\n  link: {\n    color: '#fdb075'\n  }\n});\nvar _default = NewPasswordScreen;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_customInput","_customButton","_native","_reactHookForm","_awsAmplify","_jsxRuntime","_jsxFileName","NewPasswordScreen","_ref","route","navigation","useNavigation","_useForm","useForm","defaultValues","username","params","control","handleSubmit","errors","formState","SubmitPress","_ref2","_asyncToGenerator2","default","data","Auth","forgotPasswordSubmit","code","password","navigate","e","Alert","alert","message","_x","apply","arguments","BackToSignInPress","console","log","jsx","ScrollView","showsVerticalScrollIndicator","children","jsxs","View","style","styles","root","LayCenter","Text","title","text","name","placeholder","rules","required","secureTextEntry","minLength","value","onPress","type","bgColor","fgColor","StyleSheet","create","padding","alignItems","fontSize","fontWeight","color","margin","direction","link","_default","exports"],"sources":["/Users/haoranwu/Desktop/login/loginProject/src/screens/NewPasswordScreen/NewPasswordScreen.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {View, StyleSheet, Text, ScrollView, Alert} from 'react-native';\nimport CustomInput from '../../components/customInput';\nimport CustomButton from '../../components/customButton';\nimport {RootStackParamList} from '../../navigation/paramList';\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\nimport {useNavigation} from '@react-navigation/native';\nimport {useForm} from 'react-hook-form';\nimport {Auth} from 'aws-amplify';\ntype ScreenProp = NativeStackNavigationProp<RootStackParamList, 'NewPassword'>;\nfunction NewPasswordScreen({route}: any): JSX.Element {\n  const navigation = useNavigation<ScreenProp>();\n  const {\n    control,\n    handleSubmit,\n    formState: {errors},\n  } = useForm({defaultValues: {username: route.params}});\n  const SubmitPress = async (data: any) => {\n    try {\n      await Auth.forgotPasswordSubmit(data.username, data.code, data.password);\n      navigation.navigate('SignIn');\n    } catch (e: any) {\n      Alert.alert(e.message);\n    }\n  };\n  const BackToSignInPress = () => {\n    console.log('BackToSignInPress');\n    navigation.navigate('SignIn');\n  };\n\n  return (\n    <ScrollView showsVerticalScrollIndicator={false}>\n      <View style={styles.root}>\n        <View style={styles.LayCenter}>\n          <Text style={styles.title}>Reset your password</Text>\n        </View>\n        <Text style={styles.text}>Code</Text>\n        <View style={styles.LayCenter}>\n          <CustomInput\n            name=\"username\"\n            control={control}\n            placeholder=\"Enter your username\"\n            rules={{required: 'Username is required'}}\n          />\n          <CustomInput\n            name=\"code\"\n            control={control}\n            placeholder=\"Enter your confirmation code\"\n            rules={{}}\n          />\n        </View>\n        <Text style={styles.text}>New Password</Text>\n        <View style={styles.LayCenter}>\n          <CustomInput\n            name=\"password\"\n            control={control}\n            placeholder=\"Password\"\n            secureTextEntry\n            rules={{\n              required: 'Password is required',\n              minLength: {\n                value: 7,\n                message: 'Password should be at least 7 characters long',\n              },\n            }}\n          />\n          <CustomButton\n            onPress={handleSubmit(SubmitPress)}\n            text=\"Submit\"\n            type=\"Blue\"\n            bgColor=\"\"\n            fgColor=\"\"\n          />\n          <CustomButton\n            onPress={BackToSignInPress}\n            text=\"Back to Sign in\"\n            type=\"Gray\"\n            bgColor=\"\"\n            fgColor=\"\"\n          />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    padding: 40,\n  },\n  LayCenter: {\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#051c60',\n    margin: 30,\n  },\n  text: {\n    color: 'black',\n    alignItems: 'flex-start',\n    direction: 'rtl',\n    fontSize: 18,\n  },\n  link: {color: '#fdb075'},\n});\n\nexport default NewPasswordScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}