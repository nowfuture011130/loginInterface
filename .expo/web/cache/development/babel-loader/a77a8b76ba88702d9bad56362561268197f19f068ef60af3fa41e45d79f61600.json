{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactHookForm = require(\"react-hook-form\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"/Users/haoranwu/Desktop/login/loginProject/src/components/customInput/customInput.tsx\";\nvar CustomInput = function CustomInput(_ref) {\n  var control = _ref.control,\n    name = _ref.name,\n    _ref$rules = _ref.rules,\n    rules = _ref$rules === void 0 ? {} : _ref$rules,\n    placeholder = _ref.placeholder,\n    secureTextEntry = _ref.secureTextEntry;\n  return (0, _jsxRuntime.jsx)(_reactHookForm.Controller, {\n    control: control,\n    name: name,\n    rules: rules,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n        value = _ref2$field.value,\n        onChange = _ref2$field.onChange,\n        onBlur = _ref2$field.onBlur,\n        error = _ref2.fieldState.error;\n      return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n        children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: [styles.container, {\n            borderColor: error ? 'red' : '#e8e8e8'\n          }],\n          children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n            value: value,\n            onChangeText: onChange,\n            onBlur: onBlur,\n            placeholder: placeholder,\n            style: styles.input,\n            secureTextEntry: secureTextEntry\n          })\n        }), error && (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: {\n            color: 'red',\n            alignSelf: 'stretch'\n          },\n          children: error.message || 'Error'\n        })]\n      });\n    }\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    width: '100%',\n    borderColor: '#e8e8e8',\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginVertical: 5\n  },\n  input: {}\n});\nvar _default = CustomInput;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactHookForm","_jsxRuntime","_this","_jsxFileName","CustomInput","_ref","control","name","_ref$rules","rules","placeholder","secureTextEntry","jsx","Controller","render","_ref2","_ref2$field","field","value","onChange","onBlur","error","fieldState","jsxs","Fragment","children","View","style","styles","container","borderColor","TextInput","onChangeText","input","Text","color","alignSelf","message","StyleSheet","create","backgroundColor","width","borderWidth","borderRadius","paddingHorizontal","marginVertical","_default","exports","default"],"sources":["/Users/haoranwu/Desktop/login/loginProject/src/components/customInput/customInput.tsx"],"sourcesContent":["import React from 'react';\nimport {View, Text, TextInput, StyleSheet} from 'react-native';\nimport {Controller} from 'react-hook-form';\n\nconst CustomInput = ({\n  control,\n  name,\n  rules = {},\n  placeholder,\n  secureTextEntry,\n}: any) => {\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({field: {value, onChange, onBlur}, fieldState: {error}}) => (\n        <>\n          <View\n            style={[\n              styles.container,\n              {borderColor: error ? 'red' : '#e8e8e8'},\n            ]}>\n            <TextInput\n              value={value}\n              onChangeText={onChange}\n              onBlur={onBlur}\n              placeholder={placeholder}\n              style={styles.input}\n              secureTextEntry={secureTextEntry}\n            />\n          </View>\n          {error && (\n            <Text style={{color: 'red', alignSelf: 'stretch'}}>\n              {error.message || 'Error'}\n            </Text>\n          )}\n        </>\n      )}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    width: '100%',\n\n    borderColor: '#e8e8e8',\n    borderWidth: 1,\n    borderRadius: 5,\n\n    paddingHorizontal: 10,\n    marginVertical: 5,\n  },\n  input: {},\n});\n\nexport default CustomInput;\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,cAAA,GAAAF,OAAA;AAA2C,IAAAG,WAAA,GAAAH,OAAA;AAAA,IAAAI,KAAA;EAAAC,YAAA;AAE3C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAMN;EAAA,IALTC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAAC,UAAA,GAAAH,IAAA,CACJI,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,CAAC,CAAC,GAAAA,UAAA;IACVE,WAAW,GAAAL,IAAA,CAAXK,WAAW;IACXC,eAAe,GAAAN,IAAA,CAAfM,eAAe;EAEf,OACE,IAAAV,WAAA,CAAAW,GAAA,EAACZ,cAAA,CAAAa,UAAU;IACTP,OAAO,EAAEA,OAAQ;IACjBC,IAAI,EAAEA,IAAK;IACXE,KAAK,EAAEA,KAAM;IACbK,MAAM,EAAE,SAAAA,OAAAC,KAAA;MAAA,IAAAC,WAAA,GAAAD,KAAA,CAAEE,KAAK;QAAGC,KAAK,GAAAF,WAAA,CAALE,KAAK;QAAEC,QAAQ,GAAAH,WAAA,CAARG,QAAQ;QAAEC,MAAM,GAAAJ,WAAA,CAANI,MAAM;QAAgBC,KAAK,GAAAN,KAAA,CAAlBO,UAAU,CAAGD,KAAK;MAAA,OAC5D,IAAApB,WAAA,CAAAsB,IAAA,EAAAtB,WAAA,CAAAuB,QAAA;QAAAC,QAAA,GACE,IAAAxB,WAAA,CAAAW,GAAA,EAACb,YAAA,CAAA2B,IAAI;UACHC,KAAK,EAAE,CACLC,MAAM,CAACC,SAAS,EAChB;YAACC,WAAW,EAAET,KAAK,GAAG,KAAK,GAAG;UAAS,CAAC,CACxC;UAAAI,QAAA,EACF,IAAAxB,WAAA,CAAAW,GAAA,EAACb,YAAA,CAAAgC,SAAS;YACRb,KAAK,EAAEA,KAAM;YACbc,YAAY,EAAEb,QAAS;YACvBC,MAAM,EAAEA,MAAO;YACfV,WAAW,EAAEA,WAAY;YACzBiB,KAAK,EAAEC,MAAM,CAACK,KAAM;YACpBtB,eAAe,EAAEA;UAAgB;QACjC,EACG,EACNU,KAAK,IACJ,IAAApB,WAAA,CAAAW,GAAA,EAACb,YAAA,CAAAmC,IAAI;UAACP,KAAK,EAAE;YAACQ,KAAK,EAAE,KAAK;YAAEC,SAAS,EAAE;UAAS,CAAE;UAAAX,QAAA,EAC/CJ,KAAK,CAACgB,OAAO,IAAI;QAAO,EAE5B;MAAA,EACA;IAAA;EACH,EACF;AAEN,CAAC;AAED,IAAMT,MAAM,GAAGU,uBAAU,CAACC,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,eAAe,EAAE,OAAO;IACxBC,KAAK,EAAE,MAAM;IAEbX,WAAW,EAAE,SAAS;IACtBY,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE,CAAC;IAEfC,iBAAiB,EAAE,EAAE;IACrBC,cAAc,EAAE;EAClB,CAAC;EACDZ,KAAK,EAAE,CAAC;AACV,CAAC,CAAC;AAAC,IAAAa,QAAA,GAEY1C,WAAW;AAAA2C,OAAA,CAAAC,OAAA,GAAAF,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}